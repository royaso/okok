[Script Info]
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
Collisions: Normal
PlayResX: 640
PlayResY: 480
Audio URI: d/bd/我的资源/Asmallkitten/ZZ Method Tutorial/ZZ Method Tutorial Part 1- Introduction.mp4
Scroll Position: 163
Active Line: 176
Video Zoom Percent: 1.125
Video File: d/bd/我的资源/Asmallkitten/ZZ Method Tutorial/ZZ Method Tutorial Part 1- Introduction.mp4
Video Aspect Ratio: c1.33333
Video Position: 140
Last Style Storage: Default
YCbCr Matrix: TV.601

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Default - Copy,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: sl,神零体_普通版,24,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,8,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.08,sl,,0,0,0,,大家好,欢迎观看我的zz视频教程
Dialogue: 0,0:00:03.08,0:00:04.95,sl,,0,0,0,,本视频是此系列视频教程的第一集
Dialogue: 0,0:00:04.95,0:00:07.92,sl,,0,0,0,,本集讲向你展示下大概的zz解法
Dialogue: 0,0:00:07.92,0:00:09.72,sl,,0,0,0,, 
Dialogue: 0,0:00:09.72,0:00:12.06,sl,,0,0,0,,还有些历史背景
Dialogue: 0,0:00:12.06,0:00:19.60,sl,,0,0,0,,本集主要讲四点,你只要舒服坐着看就行了
Dialogue: 0,0:00:19.87,0:00:25.00,sl,,0,0,0,,没有太多的魔方操作,也没具体的解法
Dialogue: 0,0:00:25.00,0:00:28.74,sl,,0,0,0,,大部分都是些有意思的东西和故事
Dialogue: 0,0:00:29.57,0:00:34.48,sl,,0,0,0,,首先要讲的就是此魔方解法的大概过程
Dialogue: 0,0:00:34.48,0:00:37.52,sl,,0,0,0,,我会口头讲解下此解法
Dialogue: 0,0:00:37.52,0:00:39.25,sl,,0,0,0,,解法的过程
Dialogue: 0,0:00:39.25,0:00:42.92,sl,,0,0,0,,第二部分是实例演示
Dialogue: 0,0:00:42.92,0:00:44.92,sl,,0,0,0,,这样你就能看到到底此法是如何还原魔方了
Dialogue: 0,0:00:44.92,0:00:45.72,sl,,0,0,0,,此法名为zz
Dialogue: 0,0:00:47.69,0:00:49.66,sl,,0,0,0,,此法的由来
Dialogue: 0,0:00:49.66,0:00:52.50,sl,,0,0,0,,一些有意思的东东
Dialogue: 0,0:00:52.50,0:00:56.47,sl,,0,0,0,,最后是我的经验
Dialogue: 0,0:00:56.47,0:00:59.47,sl,,0,0,0,,那就开讲啦-- zz解法的大概分解
Dialogue: 0,0:01:02.47,0:01:05.81,sl,,0,0,0,,zz分解就是说它的每个步骤
Dialogue: 0,0:01:05.81,0:01:11.25,sl,,0,0,0,,以及直接的衔接
Dialogue: 0,0:01:11.25,0:01:16.86,sl,,0,0,0,,so the zz mothed has three steps the first step is called the OE line
Dialogue: 0,0:01:16.86,0:01:22.09,sl,,0,0,0,,EO是指边块色相还原,由此可见在开始还原时
Dialogue: 0,0:01:22.09,0:01:24.80,sl,,0,0,0,,会有些边块色相转化操作
Dialogue: 0,0:01:24.80,0:01:28.67,sl,,0,0,0,,line就是线的意思,指的就是魔方的两相对边块
Dialogue: 0,0:01:28.67,0:01:31.97,sl,,0,0,0,,比如这个,就是底面(Down)的这条线
Dialogue: 0,0:01:31.97,0:01:34.57,sl,,0,0,0,,底面是什么色看你的偏好了(译者:我是蓝底红前,国际配色)
Dialogue: 0,0:01:34.57,0:01:42.91,sl,,0,0,0,,这条线就是这三个块: 前底,底面中心块,后底
Dialogue: 0,0:01:42.91,0:01:44.25,sl,,0,0,0,,看到没?这条线
Dialogue: 0,0:01:44.25,0:01:48.95,sl,,0,0,0,,等下的实力演示我会让你看清楚这条EO线
Dialogue: 0,0:01:48.95,0:01:53.36,sl,,0,0,0,,那么现在嘛.. 边块色相都对了, 这里有条线
Dialogue: 0,0:01:53.36,0:01:57.53,sl,,0,0,0,,如果你用的是CFOP解法的话,你可以把它想象是个半个"十字"(译者:我是啊)
Dialogue: 0,0:01:57.53,0:02:00.03,sl,,0,0,0,,EO线这步骤完成后
Dialogue: 0,0:02:00.03,0:02:02.57,sl,,0,0,0,,就要解第二步:　 F2L(前两层）
Dialogue: 0,0:02:02.57,0:02:07.27,sl,,0,0,0,,这里的F2L很特别,因为这个时候所有的边块色相在一开始都对了
Dialogue: 0,0:02:07.27,0:02:11.54,sl,,0,0,0,,这样F2L就只要"三相操作"就行了
Dialogue: 0,0:02:11.54,0:02:16.25,sl,,0,0,0,,三相操作意思是说只要转动三个面就可以完成F2L前两层
Dialogue: 0,0:02:16.25,0:02:19.68,sl,,0,0,0,,这三个面就是R(Right右面), U(Up顶面), L(Left左面)
Dialogue: 0,0:02:19.68,0:02:24.39,sl,,0,0,0,,这三面可以随便转动,比如可以R(右面顺时针转动) R'(右面逆时针转动), R2( 右面转动180度,哪个方向?都可以啊)
Dialogue: 0,0:02:24.39,0:02:34.43,sl,,0,0,0,,顶面和左面也是,只要是能解F2L的操作,这三面随便转
Dialogue: 0,0:02:34.43,0:02:39.60,sl,,0,0,0,,因为只要转动这三面,所以都不需要整体转动魔方,很顺手不是吗(译者:这个等下就说到了)
Dialogue: 0,0:02:39.60,0:02:45.88,sl,,0,0,0,,只要魔方那好不要乱转,这三个面都可以转的很顺手,也不比转动前面和后面
Dialogue: 0,0:02:45.88,0:02:49.92,sl,,0,0,0,,顺手又高效
Dialogue: 0,0:02:49.92,0:02:53.39,sl,,0,0,0,,zz解法就是这样任性!!
Dialogue: 0,0:02:53.39,0:02:57.52,sl,,0,0,0,,做完F2L,顶层会出现个十字(译者:因为第一步把色相都弄好了,这可很爽啊,要知道CFOP的OLL的第一步就是这个十字)
Dialogue: 0,0:02:57.52,0:03:06.57,sl,,0,0,0,,这感觉...就像做OLL(顶层色相还原)时,第一步的顶层十字不用做就自动好了(译者:我前面说了吧:)
Dialogue: 0,0:03:06.57,0:03:09.77,sl,,0,0,0,,不懂OLL... 你很快会懂的
Dialogue: 0,0:03:09.77,0:03:13.41,sl,,0,0,0,,用zz解法顶层十字自动会完成,
Dialogue: 0,0:03:13.41,0:03:18.31,sl,,0,0,0,,所以COLL(底层色相还原的第二步:还原角块色相)就可以一眼看穿了(译者:我还没这程度)
Dialogue: 0,0:03:18.31,0:03:20.28,sl,,0,0,0,,如果你是某某高手的话(译者:高手教我!!)
Dialogue: 0,0:03:20.28,0:03:22.61,sl,,0,0,0,,PLL(顶层一步还原)的情况就少多了
Dialogue: 0,0:03:22.61,0:03:24.82,sl,,0,0,0,,说到限制顶层的情况
Dialogue: 0,0:03:24.82,0:03:33.59,sl,,0,0,0,,如果想要玩顶层一步法,有顶层十字的限制,情况也会才很多
Dialogue: 0,0:03:33.59,0:03:47.54,sl,,0,0,0,,有人更进一步,不单单限制顶层的情况,还完成了顶层边块位置还原或者角块色相的还原
Dialogue: 0,0:03:47.54,0:03:50.04,sl,,0,0,0,,这样一眼看穿顶层的PLL情况就更具可行性了
Dialogue: 0,0:03:50.04,0:03:57.32,sl,,0,0,0,,zz解法大概就这样.复习下: EO线(所有边块色相还原+"底面一条柴"(译者:'我爱一条柴'!!^_^)) ; F2L(下面两层); 最后一层
Dialogue: 0,0:03:58.16,0:04:06.99,sl,,0,0,0,,最后一层的解决各种各样,你也可以玩玩各种"空槽)CLS( 译者:大概就是F2L只完成三个槽,剩一个空槽可以做缓冲, 灵活很多,这个空槽完成时候, 顶层的情况也少)
Dialogue: 0,0:04:06.99,0:04:15.43,sl,,0,0,0,,因为所有边块色相都还原好了,所以玩"空槽"就相对简单多了
Dialogue: 0,0:04:15.43,0:04:21.34,sl,,0,0,0,,这些"术语"是不是吓到你了,迷惑了? 我会留下链接的(译者:我就不留了,自己随便找都有.如果有美女不懂的话,12点以后到我房间,我们"深入"探讨WX: alison1999)
Dialogue: 0,0:04:21.34,0:04:24.71,sl,,0,0,0,,链接里有各种公式
Dialogue: 0,0:04:24.71,0:04:31.22,sl,,0,0,0,,各种公式各种情况,自个玩去吧
Dialogue: 0,0:04:31.22,0:04:33.95,sl,,0,0,0,,下面就是实例演示了
Dialogue: 0,0:04:37.59,0:04:42.16,sl,,0,0,0,,好,我们想看看这个打乱的魔方,都已经放我前面好久了(译者:蠢蠢欲动啊,哪个部位?!)
Dialogue: 0,0:04:42.16,0:04:47.20,sl,,0,0,0,,要解开咯,各位看清楚zz
Dialogue: 0,0:04:47.20,0:04:54.57,sl,,0,0,0,,我会先完成第一步EO线,指给你看好,
Dialogue: 0,0:04:54.57,0:05:01.21,sl,,0,0,0,,第二步的F2L也是完成后指给你看好,第三步完成顶层就还原魔方了. 之后再讲些有意思的东西
Dialogue: 0,0:05:01.21,0:05:04.58,sl,,0,0,0,,这样zz的解法就讲完了
Dialogue: 0,0:05:04.58,0:05:06.18,sl,,0,0,0,,这里我先完成EO线
Dialogue: 0,0:05:08.29,0:05:09.75,sl,,0,0,0,,像这样
Dialogue: 0,0:05:09.75,0:05:11.56,sl,,0,0,0,,就解决了
Dialogue: 0,0:05:11.56,0:05:13.56,sl,,0,0,0,,看到没?这条线
Dialogue: 0,0:05:13.56,0:05:18.10,sl,,0,0,0,,所有的边块色相也调好了.现在看不懂边块色相是不是调好没关系
Dialogue: 0,0:05:18.10,0:05:26.91,sl,,0,0,0,,视频教程陆续有来的! 下一集的调好边块色相我会讲的很详细的(译者:真的很详细! 2,4,6,8,10,12,我都快睡着了!^_^)
Dialogue: 0,0:05:26.91,0:05:33.98,sl,,0,0,0,,好,第一步完工,第二步F2L
Dialogue: 0,0:05:33.98,0:05:38.35,sl,,0,0,0,,我只用三相就可以完成下面两层,不用整体转动魔方哦
Dialogue: 0,0:05:38.35,0:05:41.49,sl,,0,0,0,,我的操作只用转动RUL(顶层右面左面),看好哦
Dialogue: 0,0:05:46.26,0:05:50.80,sl,,0,0,0,,还没好 哈哈哈(译者:^_^)
Dialogue: 0,0:05:50.80,0:05:54.47,sl,,0,0,0,,这就是CLS(译者: corner last slot? 空槽)
Dialogue: 0,0:05:54.47,0:05:57.04,sl,,0,0,0,,之前我提到过
Dialogue: 0,0:05:57.04,0:06:00.11,sl,,0,0,0,,有个公式可以翻转这些角块
Dialogue: 0,0:06:00.11,0:06:03.81,sl,,0,0,0,,如果只有一个角块不对的话,可以用那公式
Dialogue: 0,0:06:03.81,0:06:05.81,sl,,0,0,0,,其他都好了
Dialogue: 0,0:06:05.81,0:06:10.01,sl,,0,0,0,,我现在要翻转这个角块和其他的角块
Dialogue: 0,0:06:10.01,0:06:12.05,sl,,0,0,0,,用公式这样转
Dialogue: 0,0:06:12.05,0:06:14.55,sl,,0,0,0,,做完就是OLL了(顶层色相还原)
Dialogue: 0,0:06:14.55,0:06:16.09,sl,,0,0,0,,因为所有角块都翻转好了(色相对了)
Dialogue: 0,0:06:16.09,0:06:18.29,sl,,0,0,0,,而一开始的边块色相就已经调好了
Dialogue: 0,0:06:18.29,0:06:19.69,sl,,0,0,0,,所以结果就是OLL了
Dialogue: 0,0:06:23.10,0:06:24.80,sl,,0,0,0,,像这样
Dialogue: 0,0:06:24.80,0:06:25.36,sl,,0,0,0,,魔方就还原好了
Dialogue: 0,0:06:25.36,0:06:29.97,sl,,0,0,0,,这就是zz解法,没有用到"空槽"
Dialogue: 0,0:06:29.97,0:06:33.84,sl,,0,0,0,,空槽不算zz解法,但很方便
Dialogue: 0,0:06:33.84,0:06:38.24,sl,,0,0,0,,因为有些步骤可以省略甚至两步合并
Dialogue: 0,0:06:38.24,0:06:43.11,sl,,0,0,0,,所以我强烈推荐去学. 以后我也会讲解些空槽
Dialogue: 0,0:06:43.11,0:06:45.65,sl,,0,0,0,,在以后的这个视频教程系列讲解
Dialogue: 0,0:06:45.65,0:06:51.09,sl,,0,0,0,,那这就是实例演示了.希望你喜欢zz解法
Dialogue: 0,0:06:51.09,0:06:55.79,sl,,0,0,0,,如果看得有趣,我们接着讲讲zz解决的由来
Dialogue: 0,0:06:59.13,0:07:02.63,sl,,0,0,0,,好,下面讲讲zz解法的由来
Dialogue: 0,0:07:02.63,0:07:08.51,sl,,0,0,0,,zz解法是由zz(译者:这个得好好找找,不能让人家吃亏)Zbigniew Zborowski 在2006年发明的
Dialogue: 0,0:07:08.51,0:07:12.94,sl,,0,0,0,,我问了我一个波兰朋友发音,额,大概是那样,
Dialogue: 0,0:07:12.94,0:07:16.21,sl,,0,0,0,,以后提到他老人家我就叫他zz或者Z先辈了
Dialogue: 0,0:07:16.21,0:07:21.15,sl,,0,0,0,,我刚说了zz在2006年发明
Dialogue: 0,0:07:21.15,0:07:26.59,sl,,0,0,0,,and when it was being proposed and developed, It had ergonomics in mind
Dialogue: 0,0:07:26.59,0:07:36.57,sl,,0,0,0,,"人体工程"?在英语里就是研究让人身体上更舒适的学科(译者:我说这词我怎么知道,原来有所谓的人体工程学键盘,因为有RSI(重复性肌腱劳损))
Dialogue: 0,0:07:36.57,0:07:42.94,sl,,0,0,0,,比如说杯子
Dialogue: 0,0:07:42.94,0:07:48.35,sl,,0,0,0,,一个"人体工程"杯子会在人走路的时候更好拿
Dialogue: 0,0:07:48.35,0:07:53.72,sl,,0,0,0,,比如设计杯子的形状让它不会在人走路的时候撒出液体
Dialogue: 0,0:07:53.72,0:08:00.86,sl,,0,0,0,,或者杯子的材质更耐热
Dialogue: 0,0:08:00.86,0:08:05.56,sl,,0,0,0,,喝热东西的时候不会烫伤手
Dialogue: 0,0:08:05.56,0:08:14.14,sl,,0,0,0,,现实生活的例子就是类似这样. zz解法就是符合人体工程学的解法,它不用整体转动三阶魔方
Dialogue: 0,0:08:14.14,0:08:17.28,sl,,0,0,0,,而且把F2L下面两层的还原只需要用更舒适的RUL转动即可
Dialogue: 0,0:08:17.28,0:08:27.05,sl,,0,0,0,,这就是zz先辈在"如何更舒适地玩魔方"这点上的理解,我觉得他的理解很好也很好地在zz解法里实践了!
Dialogue: 0,0:08:27.05,0:08:30.99,sl,,0,0,0,,这就是魔方里的"人体工程学"
Dialogue: 0,0:08:32.36,0:08:39.10,sl,,0,0,0,,目前zz解法和其他三种解法并称魔方还原"大老四"
Dialogue: 0,0:08:39.10,0:08:41.50,sl,,0,0,0,,呵呵,只是戏称,别太当真
Dialogue: 0,0:08:41.50,0:08:45.20,sl,,0,0,0,,但"大老四"这说法大部分人都知道(译者: 至今从没见过会玩魔方的人,更别提女人了!泪....)
Dialogue: 0,0:08:45.20,0:08:50.34,sl,,0,0,0,,不必每个步骤都知道,知道有就行了
Dialogue: 0,0:08:50.34,0:08:53.18,sl,,0,0,0,,肯定有其他人练这个解法
Dialogue: 0,0:08:53.18,0:08:56.51,sl,,0,0,0,,速拧解法各有千秋
Dialogue: 0,0:08:56.51,0:09:01.45,sl,,0,0,0,,这"大老四"包括CFOP(译者:这个熟的很, cross F2L OLL PLL 首字母) OO XX 还有zz
Dialogue: 0,0:09:01.45,0:09:11.46,sl,,0,0,0,,可惜虽然身为"大老四"的一员,zz受到的关注和发展明显远远不如CFOP,CFOP都快被研究得地朝天了
Dialogue: 0,0:09:11.46,0:09:20.31,sl,,0,0,0,,用CFOP的人也多, 我觉得zz解法应该让更多的人知道它的存在
Dialogue: 0,0:09:20.31,0:09:23.58,sl,,0,0,0,,这就是我做这个视频教程的一部分原因
Dialogue: 0,0:09:23.58,0:09:30.68,sl,,0,0,0,,让人们了解zz解法,让想换魔方解法的人有机会接触这个新的解法
Dialogue: 0,0:09:30.68,0:09:35.22,sl,,0,0,0,,那,zz解法的由来差不多就讲到这里了
Dialogue: 0,0:09:35.22,0:09:39.56,sl,,0,0,0,,下面是我的个人体会
Dialogue: 0,0:09:42.83,0:09:47.00,sl,,0,0,0,,还有人不认识我,我的名字是Phil Yu
Dialogue: 0,0:09:47.00,0:09:50.57,sl,,0,0,0,,我从2009年起就用zz解法还原魔方了
Dialogue: 0,0:09:50.57,0:09:54.17,sl,,0,0,0,,我第一次遇见zz解法是在"速拧"论坛(译者:如果没错的话https://www.speedsolving.com/)
Dialogue: 0,0:09:54.17,0:10:01.65,sl,,0,0,0,,我看到一帖子,有人用文档描述了此解法
Dialogue: 0,0:10:01.65,0:10:07.25,sl,,0,0,0,,所以我第一次遇到zz解法是看文字版的,我看完后觉得很有趣
Dialogue: 0,0:10:07.25,0:10:11.82,sl,,0,0,0,,因为这是个全新的高效的速拧解法
Dialogue: 0,0:10:11.82,0:10:12.99,sl,,0,0,0,,我真的很感兴趣
Dialogue: 0,0:10:12.99,0:10:16.49,sl,,0,0,0,,我觉得用它单拧的效率也很不错
Dialogue: 0,0:10:16.49,0:10:20.90,sl,,0,0,0,,zz解法和我偏爱的单拧也融合得不错
Dialogue: 0,0:10:20.90,0:10:23.70,sl,,0,0,0,,zz解法内含的高效
Dialogue: 0,0:10:23.70,0:10:28.64,sl,,0,0,0,,和我偏爱的单拧的高效手法相映得彰
Dialogue: 0,0:10:28.64,0:10:32.68,sl,,0,0,0,,所以我就尝试了,然后直到现在
Dialogue: 0,0:10:32.68,0:10:34.11,sl,,0,0,0,,我很庆幸
Dialogue: 0,0:10:34.11,0:10:39.02,sl,,0,0,0,,因为1. 这让我显得特别 2. 这就像是场冒险
Dialogue: 0,0:10:39.02,0:10:42.55,sl,,0,0,0,,因为我不知道用这个解法下一步会怎样
Dialogue: 0,0:10:42.55,0:10:44.55,sl,,0,0,0,,总有新鲜事物可以学习
Dialogue: 0,0:10:44.55,0:10:51.13,sl,,0,0,0,,成为第一个用此法玩速拧的人很有趣我喜欢
Dialogue: 0,0:10:51.13,0:11:03.31,sl,,0,0,0,,现在是晚上8点12分,录这个视频时我的双手速度平均11秒, 单拧平均13秒
Dialogue: 0,0:11:03.31,0:11:07.95,sl,,0,0,0,,虽然13秒的单拧成绩看起来很快了
Dialogue: 0,0:11:07.95,0:11:11.05,sl,,0,0,0,,我觉得还有进步的空间
Dialogue: 0,0:11:11.05,0:11:15.19,sl,,0,0,0,,我真的觉得还有很多东西可以做的比现在更好
Dialogue: 0,0:11:15.19,0:11:22.46,sl,,0,0,0,,我真的想看看zz解法将来会如何发展,这也是我做此视频教程的一部分原因
Dialogue: 0,0:11:22.46,0:11:25.40,sl,,0,0,0,,希望此视频让更多人了解zz解法
Dialogue: 0,0:11:25.40,0:11:29.80,sl,,0,0,0,,也许更多人就能换用此解法还原魔方了
Dialogue: 0,0:11:29.80,0:11:34.14,sl,,0,0,0,,我觉得这个过程是互利互惠的
Dialogue: 0,0:11:34.14,0:11:36.47,sl,,0,0,0,,下面我觉解释为什么会对双方都有利
Dialogue: 0,0:11:36.47,0:11:40.24,sl,,0,0,0,,我刚说的互利互惠大概是这样
Dialogue: 0,0:11:40.24,0:11:46.68,sl,,0,0,0,,你学了一个新的还原魔方的方法
Dialogue: 0,0:11:46.68,0:11:50.82,sl,,0,0,0,,你把这个方法和自己原有的方法结合
Dialogue: 0,0:11:50.82,0:11:55.26,sl,,0,0,0,,因为这个解法已经被证实是有效的,所以如果你学法的当应该没问题学的会
Dialogue: 0,0:11:55.26,0:12:02.57,sl,,0,0,0,,学习的过程有乐趣,你会体验到全新的解法,这我喜欢!
Dialogue: 0,0:12:02.57,0:12:05.54,sl,,0,0,0,,所以你学会了zz解法
Dialogue: 0,0:12:05.54,0:12:11.71,sl,,0,0,0,,然后你可以把你学会的东西在反补到这个zz解法上
Dialogue: 0,0:12:11.71,0:12:15.18,sl,,0,0,0,,有趣的公式啦步骤啦
Dialogue: 0,0:12:15.18,0:12:22.15,sl,,0,0,0,,或者"筑基"的新方法,这些反补到zz解法上
Dialogue: 0,0:12:22.15,0:12:24.26,sl,,0,0,0,,zz解法就这样发展了
Dialogue: 0,0:12:24.26,0:12:29.09,sl,,0,0,0,,你用zz解法还原魔方你学到了,而zz解法因此也发展了
Dialogue: 0,0:12:29.09,0:12:32.60,sl,,0,0,0,,这样的互利互惠不是很cool的一件事吗?
Dialogue: 0,0:12:32.60,0:12:40.64,sl,,0,0,0,,这是那些已经发展完备的解法不能比拟的,没有自己发展的空间,一切都有先人探索过好好地摆在你面前了
Dialogue: 0,0:12:40.64,0:12:42.97,sl,,0,0,0,,我个人喜欢参与到我的解法
Dialogue: 0,0:12:42.97,0:12:46.28,sl,,0,0,0,,所以我觉得zz解法非常好
Dialogue: 0,0:12:46.28,0:12:51.88,sl,,0,0,0,,所以我喜欢越来越多的人看到此教程,学到zz解法
Dialogue: 0,0:12:51.88,0:12:56.69,sl,,0,0,0,,我是目前唯一的一个用此解法玩速拧的人(译者:不要觉得作者洋洋得意.这视频教程我不知道是多久的了!而且人家成绩摆在那)
Dialogue: 0,0:12:56.69,0:12:59.42,sl,,0,0,0,,我真心希望有更多人用此法
Dialogue: 0,0:12:59.42,0:13:02.63,sl,,0,0,0,,那,如果你对此法感兴趣,我希望下个视频教程见到你
Dialogue: 0,0:13:02.63,0:13:11.90,sl,,0,0,0,,下一集是关于边块色相判断正确与否,也是本系列第一个真正的学习教程
Dialogue: 0,0:13:11.90,0:13:16.44,sl,,0,0,0,,我会教你如何判定边块色相以便你可以调整正确
Dialogue: 0,0:13:16.44,0:13:19.08,sl,,0,0,0,,这是后面的内容了
Dialogue: 0,0:13:19.08,0:13:25.95,sl,,0,0,0,,如果你是个好奇的宝宝, 我后面还有更多的视频教程,其他资料也放到下面的链接里了
Dialogue: 0,0:13:25.95,0:13:33.32,sl,,0,0,0,,还有完整的实例以及每个步骤的想法
Dialogue: 0,0:13:33.32,0:13:38.23,sl,,0,0,0,,感谢观看此视频,希望下个视频还能看到你
Dialogue: 0,0:00:00.00,0:13:38.23,Default,,0,0,0,,{\pos(72.1,104)}ROYASO\{.com}
